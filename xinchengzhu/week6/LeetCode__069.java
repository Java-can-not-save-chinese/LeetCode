package LeetCode.xinchengzhu.week6;

/**
 * 比如136161这个数字，首先我们找到一个和136161的平方根比较接近的数，任选一个，比方说300到400间的任何一个数，这里选350，作为代表。
 * 　　我们先计算0.5(350+136161/350)，结果为369.5。
 * 　　然后我们再计算0.5(369.5+136161/369.5)得到369.0003，我们发现369.5和369.0003相差无几，并且369²末尾数字为1。我们有理由断定369²=136161。
 * 　　一般来说，能够开方开的尽的，用上述方法算一两次基本结果就出来了。再举个例子：计算 。首先我们发现600²<469225<700²，我们可以挑选650作为第一次计算的数。即算0.5(650+469225/650)得到685.9。而685附近只有685²末尾数字是5，因此685²=469225。从而 。　
 * 　　对于那些开方开不尽的数，用这种方法算两三次精度就很可观了，一般达到小数点后好几位。
 */
public class LeetCode__069 {

    public static void main(String[] args) {

        System.out.println(mySqrt(8));
    }




    public static int mySqrt(int x) {
        Double r=1.0;
        double cheak;
        do
        {
            r = (x / r + r) / 2.0;
            cheak = r * r - x;
        } while((cheak >= 0 ? cheak : -cheak) > 0.1);
        return r.intValue();
    }
}
